CREATE EXTENSION IF NOT EXISTS unaccent;

-- Table: public.character_sheet

CREATE TABLE IF NOT EXISTS public.character_sheet
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    character_name character varying(200) COLLATE pg_catalog."default" NOT NULL,
    player_id uuid NOT NULL,
    session_id bigint,
    trpg_system character varying(45) COLLATE pg_catalog."default" NOT NULL,
    slug character varying(255) COLLATE pg_catalog."default",
    max_hp integer,
    current_hp integer,
    CONSTRAINT character_sheet_pkey PRIMARY KEY (id),
    CONSTRAINT character_sheet_slug_key UNIQUE (slug),
    CONSTRAINT fk_session_character_sheet FOREIGN KEY (session_id)
        REFERENCES public.session (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

CREATE OR REPLACE FUNCTION public.generate_unique_character_sheet_slug()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF
AS $BODY$
DECLARE
  base_slug TEXT;
  new_slug TEXT;
  counter INTEGER := 1;
BEGIN
  -- Normaliza o nome:
  -- 1. Converte para minúsculas
  -- 2. Remove acentos
  -- 3. Substitui tudo que não for [a-z0-9] por hífen
  -- 4. Remove hífens no início/fim
  base_slug := lower(NEW.character_name);
  base_slug := unaccent(base_slug);
  base_slug := regexp_replace(base_slug, '[^a-z0-9]+', '-', 'g');
  base_slug := trim(both '-' from base_slug);

  new_slug := base_slug;

  -- Garante unicidade
  WHILE EXISTS (SELECT 1 FROM character_sheet WHERE slug = new_slug AND id <> NEW.id) LOOP
    counter := counter + 1;
    new_slug := base_slug || '-' || counter::TEXT;
  END LOOP;

  NEW.slug := new_slug;
  RETURN NEW;
END;
$BODY$;

CREATE OR REPLACE TRIGGER trg_generate_slug
BEFORE INSERT
ON public.character_sheet
FOR EACH ROW
EXECUTE FUNCTION public.generate_unique_character_sheet_slug();

-- Table: public.session

CREATE TABLE IF NOT EXISTS public.session
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    session_name character varying(200) COLLATE pg_catalog."default" NOT NULL,
    dm_id uuid,
    in_play boolean NOT NULL DEFAULT false,
    trpg_system character varying(45) COLLATE pg_catalog."default" NOT NULL,
    slug character varying(255) COLLATE pg_catalog."default",
    overview text COLLATE pg_catalog."default",
    CONSTRAINT session_pkey PRIMARY KEY (id),
    CONSTRAINT session_slug_key UNIQUE (slug)
);

CREATE OR REPLACE FUNCTION public.generate_unique_session_slug()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF
AS $BODY$
DECLARE
  base_slug TEXT;
  new_slug TEXT;
  counter INTEGER := 1;
BEGIN
  -- Normaliza o nome:
  -- 1. Converte para minúsculas
  -- 2. Remove acentos
  -- 3. Substitui tudo que não for [a-z0-9] por hífen
  -- 4. Remove hífens no início/fim
  base_slug := lower(NEW.session_name);
  base_slug := unaccent(base_slug);
  base_slug := regexp_replace(base_slug, '[^a-z0-9]+', '-', 'g');
  base_slug := trim(both '-' from base_slug);

  new_slug := base_slug;

  -- Garante unicidade
  WHILE EXISTS (SELECT 1 FROM session WHERE slug = new_slug AND id <> NEW.id) LOOP
    counter := counter + 1;
    new_slug := base_slug || '-' || counter::TEXT;
  END LOOP;

  NEW.slug := new_slug;
  RETURN NEW;
END;
$BODY$;

CREATE OR REPLACE TRIGGER trg_generate_slug
BEFORE INSERT
ON public.session
FOR EACH ROW
EXECUTE FUNCTION public.generate_unique_session_slug();

-- Table: public.session_calendar

CREATE TABLE IF NOT EXISTS public.session_calendar
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    session_id bigint,
    session_date timestamp without time zone NOT NULL DEFAULT now(),
    CONSTRAINT session_calendar_pkey PRIMARY KEY (id),
    CONSTRAINT fk_session_session_calendar FOREIGN KEY (session_id)
        REFERENCES public.session (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);